#徐晗璐 学号2002070002 20新医科班
#email:2995088023@qq.com
#04作业&练习

8.5:4.5
c(1,1:3,c(5,8),13)
vector("numeric",5)
vector("complex",3)
vector("logical",4)
vector("character",3)
vector("list",19)
numeric(5)
character(3)
seq.int(3,12)
seq.int(2,10,2)
seq.int(1.2,-1.2,-0.2)
n <- 0
1:n
seq_len(n)#返回integer(0)
seq_len#返回function (length.out) .primitive("seq_len")
aa <- c("aa","ab","bb","ac")
for(i in seq_along(aa))print(aa[i])
length(1:5)
length(c(TRUE,FALSE,FALSE))
a <- c("a","ab","abc")
length(a)
nchar(a)
changelength <- c(1,2,3,4,5)
length(changelength) <- 3
changelength
length(changelength) <- 7
changelength
c(apple=1,banana=2,"pear"=3,4)
x <- 1:4
names(x) <- c("cat","dog","cell","")
x
names(x)
names(1:4)
x <- (1:3)^2
x[c(1,3,5)]
x[c(-2,-4)]
x[c(TRUE,FALSE,TRUE,FALSE,TRUE)]
y <- (1:5)^2
y
names(y) <- c("one","four","nine","sixteen","twentyfive")
y[c("one","four","twentyfive")]
y[c(1,-1)]
y[c(1,NA,5)]
y[c(TRUE,FALSE,NA,TRUE,FALSE)]
y[8]
y[1.8]
y[-1.5]
y[]
which(x>9)
which(y>9)
which.max(y)
which.min(y)
1:5 + 1
3 + 2:3
1:3 + 1:9
1:5 + 1:7
rep(1:5,3)
rep(1:5,each = 3)
rep(1:5,times = 1:5)
rep(1:5,times = 1:3)
rep(1:5,length.out = 8)
rep.int(1:5,3)
rep_len(1:5,14)
(three_d_array <- array(
  1:24,
  dim = c(4,3,2),
  dimnames = list(
    c("one","two","three","four"),
    c("spleen","pancreas","liver"),
    c("a","b")
  )
))
class(three_d_array)
(a_matrix <- matrix(
  1:12,
  nrow = 4,
  byrow = TRUE,
  dimnames = list(
    c("one","two","three","four"),
    c("spleen","pancreas","liver")
  )
))
class(a_matrix)#"matrix" "array"
dim(three_d_array)
dim(a_matrix)
nrow(a_matrix)
ncol(a_matrix)
length(three_d_array)
length(a_matrix)
dim(a_matrix) <- c(6,2)
a_matrix
identical(nrow(a_matrix),NROW(a_matrix))
a_number <- c(1,2,3,4,5,6)
nrow(a_number)
NROW(a_number)
NCOL(a_number)
(c_matrix <- matrix(
  1:12,
  nrow = 4,
  byrow = TRUE,
  dimnames = list(
    c("one","two","three","four"),
    c("spleen","pancreas","liver")
  )
))
rownames(c_matrix)
colnames(c_matrix)
dimnames(c_matrix)
rownames(three_d_array)
colnames(three_d_array)
dimnames(three_d_array)
c_matrix[1,c("pancreas","liver")]
c_matrix[1,]
c_matrix[,c("pancreas","liver")]
(another_matrix <- matrix(
  seq.int(2,24,2),
  nrow = 4,
  dimnames = list(
    c("five","six","seven","eight"),
    c("cornea","sclera","pupil")
  )
))
c(a_matrix,another_matrix)
cbind(c_matrix,another_matrix)
rbind(c_matrix,another_matrix)
c_matrix + another_matrix
c_matrix * another_matrix
t(a_matrix)
c_matrix%*%t(c_matrix)
1:3%o%1:3
1:3%o%4:6
outer(1:3,4:6)

#三角形数
x <- 1:20
trianglenumber <- c(x*(x + 1)/2)
trianglenumber
names(trianglenumber) <- letters[1:20]
#fac <- factor(trianglenumber)
#summary(fac)
#View(trianglenumber)
#trianglenumber，就自己确认一下
trianglenumber[c("a","e","i","o","u")]

#创建一个21×21的矩阵。
aaa <- c(seq.int(11,0,-1),seq.int(1,11))
diag(aaa)

问题4-1，你将如何创建一个包含值0、0.25、0.5、0.75和1的向量？  c(seq.int(0,1,0.25))
问题4-2，描述两种命名向量元素的方式。c(元素名1=元素1,元素名2=元素2,...,元素名n=元素n)  names(向量) <- c(元素名1，元素名2，...，元素名n)
问题4-3，向量索引中的四种类型是什么？ 1传入正数，则返回此位置上的向量元素。 2. 传入负数，则返回一个向量，它包含除该位置以外的所有元素。 3.传入一个逻辑向量，则返回一个向量，包含索引为TRUE的元素。 4.对于已命名的向量，传入命名的字符向量，则返回向
量中包含这些名字的元素。
问题4-4，一个3×4×5的数组的长度是多少？用length函数返回60
问题4-5，你会用哪个操作符来执行两个矩阵的内积？x%*%y crossprod(x,y) 后面这个我查的，矩阵数学也没有教
